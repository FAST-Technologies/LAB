/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 Floor.glb 
*/
import * as THREE from "three"
import {RigidBody} from '@react-three/rapier'
import {useEffect, useMemo, useRef, useState} from 'react'
import { useGLTF, PositionalAudio } from '@react-three/drei'
import type {GroupProps} from "@react-three/fiber"
import useAudioHook from "../functionalComponents/useAudioHook";
import {useStore} from "../store";

const Floor = (props: GroupProps) => {
    const [ready, sound] = useStore<any>((state: any) => [state.ready, state.sound])
    const group = useRef()
  const { nodes, materials } = useGLTF('/models/Floor.glb') as any
    const [hover, setHover]=useState<boolean>(false)
    const [click, setClick]=useState<boolean>(false)
    const audio = useAudioHook((state: any)=>state.audio)
    const secretSound = useMemo(()=> new Audio('/sounds/Sirona.mp3'),[])
    const minorSound = useMemo(()=> new Audio('/sounds/Blasterjaxx.mp3'),[])
    function onPlay () {
        secretSound.currentTime = 0
        secretSound.volume = 2
        secretSound.play()
        minorSound.currentTime = 1
        minorSound.volume = 0.1
        minorSound.play()
    }

    useEffect(()=>{
        secretSound.muted = !audio
        minorSound.muted = !audio
    }, [audio])

  // @ts-ignore
    return (
    //   <RigidBody
    //       type="fixed"
    //       restitution={0.1}
    //     friction={1}
    //     onCollisionEnter={onPlay}
    //     {...props}
    // >
        <group {...props} dispose={null}>
          <mesh castShadow geometry={nodes.Plane001.geometry}  material-color="#ffffff" material={materials['Stone Walkway']} position={[-1.416, 0.469, 6.603]} scale={80.313}>
              <meshStandardMaterial  color="#FFFFFF" />
              {sound}
              {<PositionalAudio url="/sounds/Sirona.mp3" loop autoplay distance={10} />}
          </mesh>
        </group>
      // </RigidBody>
  )
}

export default Floor

useGLTF.preload('/models/Floor.glb')
