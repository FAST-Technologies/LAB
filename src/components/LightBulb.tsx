/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 Light.glb 
*/

import {useRef, useState} from 'react'
import { useGLTF } from '@react-three/drei'

const LightBulb = (props: any) => {
  const { nodes, materials } = useGLTF('/models/LightBulb.glb') as any
    const [hovered, hover] = useState<boolean>(false)
    const [clicked, click] = useState<boolean>(false)
    const setClick = () => {
        click(!clicked)
    }
  return (
    <group {...props} dispose={null}>
      <group position={[-14.861, 18.384, 1.964]} scale={0.225}>
        <mesh
            geometry={nodes.Cylinder015.geometry}
            material={materials['Material.011']}
            onClick={setClick}
            onPointerOver={(event) => (event.stopPropagation(), hover(true))}
            onPointerOut={(event) => hover(false)}
        >
            <meshStandardMaterial color={hovered ? 'yellow' : "black"}/>
        </mesh>
        <mesh geometry={nodes.Cylinder015_1.geometry} material={materials['Material.012']} />
        <mesh geometry={nodes.Cylinder015_2.geometry} material={materials['Material.014']} />
      </group>
    </group>
  )
}

export default LightBulb

useGLTF.preload('/models/LightBulb.glb')
